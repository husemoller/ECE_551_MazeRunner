module D_term(clk, rst_n, err_sat, err_vld, D_term);
  input clk, rst_n;
  input [10:0] err_sat;
  input err_vld;
  output signed [14:0] D_term;

  localparam D_COEFF = 7'h38;
  wire signed [10:0] D_diff;
  reg [10:0] err_sat_1, prev_err;
  wire signed [7:0] D_diff_sat;

  assign D_diff = err_sat - prev_err;
  assign D_diff_sat[6:0] = D_diff[10] ? (&D_diff[10:7] ? D_diff[6:0] : 7'h00) :
                           (|D_diff[10:7] ? 7'h7F : D_diff[6:0]);
  assign D_diff_sat[7] = D_diff[10];
  assign D_term = D_diff_sat * signed'(D_COEFF);

  always_ff @(posedge clk, negedge rst_n)
    if(!rst_n)
      err_sat_1 <= 11'h000;
    else if (err_vld)
      err_sat_1 <= err_sat;

  always_ff @(posedge clk, negedge rst_n)
    if(!rst_n)
      prev_err <= 11'h000;
    else if (err_vld)
      prev_err <= err_sat_1;

endmodule
