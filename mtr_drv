//****************************
// Module: mtr_drv
// Author: Harry Zhao
// Date 10/15/2020
//****************************

module mtr_drv(clk, rst_n, lft_duty, rght_duty, DIRL, DIRR, PWML, PWMR);
input clk, rst_n;                    //System clock, asynchronos active low reset
input [11:0] lft_duty, rght_duty;    //12 bits signed duty for both motors
output DIRL, DIRR;               // direction signal of output PWM motor
output PWML, PWMR;         // output PWM duty for two motors

//variables used to store temp data
logic [10:0] PWML_duty, PWMR_duty;

assign DIRL = lft_duty[11];
assign DIRR = rght_duty[11];

assign PWML_duty = (lft_duty[11] == 1'b0) ? lft_duty[10:0] : ((lft_duty == 12'h800) ? 11'h7FF : ~lft_duty[10:0] + 1) ;
assign PWMR_duty = (rght_duty[11] == 1'b0) ? rght_duty[10:0] : ((rght_duty == 12'h800) ? 11'h7FF : ~rght_duty[10:0] + 1) ;

PWM11 PWML_out(.clk(clk), .rst_n(rst_n), .duty(PWML_duty), .PWM_sig(PWML));
PWM11 PWMR_out(.clk(clk), .rst_n(rst_n), .duty(PWMR_duty), .PWM_sig(PWMR));

endmodule
