module CommMaster_tb();

	logic clk, rst_n;
	logic snd_cmd, cmd_cmplt;
	logic TX_RX;
	logic [15:0] cmd_in;
	logic cmd_rdy;
	logic clr_cmd_rdy;
	logic [15:0] cmd_out;

	// Instantiate DUT = Device Under Test //
	CommMaster iDUT1(.TX(TX_RX), .cmd_cmplt(cmd_cmplt), .cmd(cmd_in), .snd_cmd(snd_cmd), .clk(clk), .rst_n(rst_n));

	// Instantiate DUT = Device Under Test //
	UART_wrapper iDUT2(.cmd(cmd_out), .cmd_rdy(cmd_rdy), .clr_cmd_rdy(clr_cmd_rdy), .RX(TX_RX), .clk(clk), .rst_n(rst_n));


initial begin
	clk = 0;
	rst_n = 0;
	snd_cmd = 0;
	cmd_rdy = 0;
	clr_cmd_rdy = 0;
	cmd_in = 16'h34F1;

	@(negedge clk)
		rst_n = 1;
		
	@(negedge clk) begin
		clr_cmd_rdy = 1;
		snd_cmd = 1;
	end

	@(negedge clk) begin
		clr_cmd_rdy = 0;
		snd_cmd = 0;
	end

	fork 
		begin : CommMaster_wait1
			repeat(1000000) @(posedge clk);
			$display("Timeout occured waiting for cmd to come back");
 			$stop();
		end
		begin
			@(cmd_rdy);
			disable CommMaster_wait1;
		end
	join

	if (cmd_in != cmd_out) begin
		$display("ERROR: Expected cmd output value to be %h, but value recieved was %h", cmd_in, cmd_out);
		$stop();
	end
	
	$display("Yahoo! Test passed!");
	$stop();	


end

always #5 clk = ~clk;

endmodule
